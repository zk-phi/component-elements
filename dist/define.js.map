{"version":3,"file":"define.js","sources":["../src/shared/model.ts","../src/shared/parse.ts","../src/shared/element.ts","../src/parse.ts","../src/define.ts"],"sourcesContent":["/* -----------------------------------\n *\n * Component\n *\n * -------------------------------- */\n\ntype IComponent = any;\n\n/* -----------------------------------\n *\n * Options\n *\n * -------------------------------- */\n\ninterface IOptions<F = any, W = any> {\n  attributes?: string[];\n  formatProps?: (props: any) => F;\n  wrapComponent?: (child: any) => W;\n}\n\n/* -----------------------------------\n *\n * Errors\n *\n * -------------------------------- */\n\nenum ErrorTypes {\n  Promise = 'Error: Promises cannot be used for SSR',\n  Missing = 'Error: Cannot find component in provided function',\n  Json = 'Error: Invalid JSON string passed to component',\n}\n\n/* -----------------------------------\n *\n * Element\n *\n * -------------------------------- */\n\ninterface CustomElement<C = any, I = any> extends HTMLElement {\n  __mounted: boolean;\n  __component: C;\n  __properties?: IProps;\n  __slots?: { [index: string]: any };\n  __instance?: I;\n  __children?: any;\n  __options: IOptions;\n}\n\n/* -----------------------------------\n *\n * IProps\n *\n * -------------------------------- */\n\ninterface IProps {\n  [index: string]: any;\n}\n\n/* -----------------------------------\n *\n * Guards\n *\n * -------------------------------- */\n\nconst isPromise = (input: any): input is Promise<any> => {\n  return input && typeof input.then === 'function';\n};\n\n/* -----------------------------------\n *\n * Self Closing\n *\n * -------------------------------- */\n\nconst selfClosingTags = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'hr',\n  'img',\n  'input',\n  'link',\n  'meta',\n  'source',\n  'embed',\n  'param',\n  'track',\n  'wbr',\n];\n\n/* -----------------------------------\n *\n * Export\n *\n * -------------------------------- */\n\nexport { IComponent, IOptions, IProps, ErrorTypes, CustomElement, isPromise, selfClosingTags };\n","import { IProps, CustomElement, ErrorTypes } from './model';\n\n/* -----------------------------------\n *\n * parseJson\n *\n * -------------------------------- */\n\nfunction parseJson(this: CustomElement, value: string) {\n  const { tagName } = this;\n  const { formatProps } = this.__options;\n\n  let result = {};\n\n  try {\n    result = JSON.parse(value);\n  } catch {\n    console.error(ErrorTypes.Json, `: <${tagName.toLowerCase()}>`);\n  }\n\n  if (formatProps) {\n    result = formatProps(result);\n  }\n\n  return result;\n}\n\n/* -----------------------------------\n *\n * getDocument\n *\n * -------------------------------- */\n\nfunction getDocument(html: string) {\n  const value = `<!DOCTYPE html>\\n<html><body>${html}</body></html>`;\n\n  let nodes: Document;\n\n  try {\n    nodes = new DOMParser().parseFromString(value, 'text/html');\n  } catch {\n    // no-op\n  }\n\n  if (!nodes) {\n    return void 0;\n  }\n\n  return nodes.body;\n}\n\n/* -----------------------------------\n *\n * getAttributeObject\n *\n * -------------------------------- */\n\nfunction getAttributeObject(attributes: NamedNodeMap): IProps {\n  const result = {};\n\n  if (!attributes?.length) {\n    return result;\n  }\n\n  for (let i = attributes.length - 1; i >= 0; i--) {\n    const item = attributes[i];\n\n    result[item.name] = item.value;\n  }\n\n  return result;\n}\n\n/* -----------------------------------\n *\n * getAttributeProps\n *\n * -------------------------------- */\n\nfunction getAttributeProps(attributes: NamedNodeMap, allowed?: string[]): IProps {\n  const values = getAttributeObject(attributes);\n\n  let result = {};\n\n  for (const key of Object.keys(values)) {\n    if (allowed?.indexOf(key) === -1) {\n      continue;\n    }\n\n    result[getPropKey(key)] = values[key];\n  }\n\n  return result;\n}\n\n/* -----------------------------------\n *\n * Attribute\n *\n * -------------------------------- */\n\nfunction getPropKey(value: string) {\n  const sanitised = value.trim().replace(/[\\s_]/g, '-');\n\n  return (\n    sanitised.charAt(0).toLowerCase() +\n    sanitised.slice(1).replace(/-([a-z])/g, ({ 1: value }) => value.toUpperCase())\n  );\n}\n\n/* -----------------------------------\n *\n * Export\n *\n * -------------------------------- */\n\nexport { parseJson, getDocument, getPropKey, getAttributeObject, getAttributeProps };\n","import { getAttributeProps } from './parse';\nimport { IComponent, CustomElement } from './model';\n\n/* -----------------------------------\n *\n * Async\n *\n * -------------------------------- */\n\nfunction getAsyncComponent(component: Promise<IComponent>, tagName: string): Promise<any> {\n  return component.then((response) => getComponentResult(response, tagName));\n}\n\n/* -----------------------------------\n *\n * Result\n *\n * -------------------------------- */\n\nfunction getComponentResult(response: IComponent, tagName: string) {\n  let result = void 0;\n\n  if (typeof response === 'function') {\n    return response;\n  }\n\n  if (typeof response === 'object') {\n    result = response[getNameFromTag(tagName)] || void 0;\n  }\n\n  return result;\n}\n\n/* -----------------------------------\n *\n * Element\n *\n * -------------------------------- */\n\nfunction getElementTag(tagName: string) {\n  let result = tagName.toLowerCase();\n\n  if (result.indexOf('-') < 0) {\n    result = 'component-' + result;\n  }\n\n  return result;\n}\n\n/* -----------------------------------\n *\n * Tag\n *\n * -------------------------------- */\n\nfunction getNameFromTag(value: string) {\n  value = value.toLowerCase();\n\n  return value.replace(/(^\\w|-\\w)/g, (item) => item.replace(/-/, '').toUpperCase());\n}\n\n/* -----------------------------------\n *\n * Attributes\n *\n * -------------------------------- */\n\nfunction getElementAttributes(this: CustomElement) {\n  const { attributes = [] } = this.__options;\n  const result = {};\n\n  if (!this.hasAttributes()) {\n    return result;\n  }\n\n  return getAttributeProps(this.attributes, attributes);\n}\n\n/* -----------------------------------\n *\n * Export\n *\n * -------------------------------- */\n\nexport { getElementTag, getElementAttributes, getAsyncComponent };\n","import { h, ComponentFactory, Fragment } from 'preact';\nimport {\n  CustomElement,\n  getDocument,\n  getAttributeObject,\n  selfClosingTags,\n  getPropKey,\n} from './shared';\n\n/* -----------------------------------\n *\n * parseHtml\n *\n * -------------------------------- */\n\nfunction parseHtml(this: CustomElement): ComponentFactory<{}> {\n  const dom = getDocument(this.innerHTML);\n\n  if (!dom) {\n    return void 0;\n  }\n\n  const result = convertToVDom.call(this, dom);\n\n  return () => result;\n}\n\n/* -----------------------------------\n *\n * convertToVDom\n *\n * -------------------------------- */\n\nfunction convertToVDom(this: CustomElement, node: Element) {\n  if (node.nodeType === 3) {\n    return node.textContent?.trim() || '';\n  }\n\n  if (node.nodeType !== 1) {\n    return null;\n  }\n\n  const nodeName = String(node.nodeName).toLowerCase();\n  const childNodes = Array.from(node.childNodes);\n\n  const children = () => childNodes.map((child) => convertToVDom.call(this, child));\n  const { slot, ...props } = getAttributeObject(node.attributes);\n\n  if (nodeName === 'script') {\n    return null;\n  }\n\n  if (nodeName === 'body') {\n    return h(Fragment, {}, children());\n  }\n\n  if (selfClosingTags.includes(nodeName)) {\n    return h(nodeName, props);\n  }\n\n  if (slot) {\n    this.__slots[getPropKey(slot)] = getSlotChildren(children());\n\n    return null;\n  }\n\n  return h(nodeName, props, children());\n}\n\n/* -----------------------------------\n *\n * getSlotChildren\n *\n * -------------------------------- */\n\nfunction getSlotChildren(children: JSX.Element[]) {\n  const isString = (item) => typeof item === 'string';\n\n  if (children.every(isString)) {\n    return children.join(' ');\n  }\n\n  return h(Fragment, {}, children);\n}\n\n/* -----------------------------------\n *\n * Export\n *\n * -------------------------------- */\n\nexport { parseHtml };\n","import { h, render, ComponentFactory, FunctionComponent } from 'preact';\nimport {\n  IProps,\n  ErrorTypes,\n  CustomElement,\n  isPromise,\n  parseJson,\n  getElementTag,\n  getPropKey,\n  getElementAttributes,\n  getAsyncComponent,\n} from './shared';\nimport { parseHtml } from './parse';\nimport { IOptions, ComponentFunction } from './model';\n\n/* -----------------------------------\n *\n * Define\n *\n * -------------------------------- */\n\nfunction define<P = {}>(\n  tagName: string,\n  child: ComponentFunction<P>,\n  options: IOptions = {}\n): FunctionComponent<P> {\n  const { wrapComponent } = options;\n  const preRender = typeof window === 'undefined';\n  const elementTag = getElementTag(tagName);\n\n  if (!preRender) {\n    customElements.define(elementTag, setupElement(child, options));\n\n    return;\n  }\n\n  const content = child();\n\n  if (isPromise(content)) {\n    throw new Error(`${ErrorTypes.Promise} : <${tagName}>`);\n  }\n\n  let component = content;\n\n  if (wrapComponent) {\n    component = wrapComponent(content);\n  }\n\n  return (props: P) =>\n    h(elementTag, { server: true }, [\n      h('script', {\n        type: 'application/json',\n        dangerouslySetInnerHTML: { __html: JSON.stringify(props) },\n      }),\n      h(component, props),\n    ]);\n}\n\n/* -----------------------------------\n *\n * Setup\n *\n * -------------------------------- */\n\nfunction setupElement<T>(component: ComponentFunction<T>, options: IOptions = {}): any {\n  const { attributes = [], formAssociated = false } = options;\n\n  if (typeof Reflect !== 'undefined' && Reflect.construct) {\n    const CustomElement = function () {\n      const element = Reflect.construct(HTMLElement, [], CustomElement);\n\n      element.__mounted = false;\n      element.__component = component;\n      element.__properties = {};\n      element.__slots = {};\n      element.__children = void 0;\n      element.__options = options;\n\n      return element;\n    };\n\n    CustomElement.observedAttributes = ['props', ...attributes];\n    CustomElement.formAssociated = formAssociated;\n\n    CustomElement.prototype = Object.create(HTMLElement.prototype);\n    CustomElement.prototype.constructor = CustomElement;\n    CustomElement.prototype.connectedCallback = onConnected;\n    CustomElement.prototype.attributeChangedCallback = onAttributeChange;\n    CustomElement.prototype.disconnectedCallback = onDisconnected;\n\n    return CustomElement;\n  }\n\n  return class CustomElement extends HTMLElement {\n    __mounted = false;\n    __component = component;\n    __properties = {};\n    __slots = {};\n    __children = void 0;\n    __options = options;\n\n    static observedAttributes = ['props', ...attributes];\n    static formAssociated = formAssociated;\n\n    public connectedCallback() {\n      onConnected.call(this);\n    }\n\n    public attributeChangedCallback(...args) {\n      onAttributeChange.call(this, ...args);\n    }\n\n    public disconnectedCallback() {\n      onDisconnected.call(this);\n    }\n  };\n}\n\n/* -----------------------------------\n *\n * Connected\n *\n * -------------------------------- */\n\nfunction onConnected(this: CustomElement) {\n  const attributes = getElementAttributes.call(this);\n  const props = this.getAttribute('props');\n  const json = this.querySelector('[type=\"application/json\"]');\n  const data = parseJson.call(this, props || json?.innerHTML || '{}');\n\n  json?.remove();\n\n  let children = this.__children;\n\n  if (!this.__mounted && !this.hasAttribute('server')) {\n    children = h(parseHtml.call(this), {});\n  }\n\n  this.__properties = { ...this.__slots, ...data, ...attributes };\n  this.__children = children || [];\n\n  this.removeAttribute('server');\n  this.innerHTML = '';\n\n  const response = this.__component();\n  const renderer = (result: ComponentFactory) => finaliseComponent.call(this, result);\n\n  if (isPromise(response)) {\n    getAsyncComponent(response, this.tagName).then(renderer);\n\n    return;\n  }\n\n  renderer(response);\n}\n\n/* -----------------------------------\n *\n * Attribute\n *\n * -------------------------------- */\n\nfunction onAttributeChange(this: CustomElement, name: string, original: string, updated: string) {\n  if (!this.__mounted) {\n    return;\n  }\n\n  updated = updated == null ? void 0 : updated;\n\n  let props = this.__properties;\n\n  if (name === 'props') {\n    props = { ...props, ...parseJson.call(this, updated) };\n  } else {\n    props[getPropKey(name)] = updated;\n  }\n\n  this.__properties = props;\n\n  render(h(this.__instance, { ...props, parent: this, children: this.__children }), this);\n}\n\n/* -----------------------------------\n *\n * Disconnected\n *\n * -------------------------------- */\n\nfunction onDisconnected(this: CustomElement) {\n  render(null, this);\n}\n\n/* -----------------------------------\n *\n * Finalise\n *\n * -------------------------------- */\n\nfunction finaliseComponent(this: CustomElement, component: ComponentFactory<IProps>) {\n  const { tagName } = this;\n  const { wrapComponent } = this.__options;\n\n  if (!component) {\n    console.error(ErrorTypes.Missing, `: <${tagName.toLowerCase()}>`);\n\n    return;\n  }\n\n  if (wrapComponent) {\n    component = wrapComponent(component);\n  }\n\n  this.__instance = component;\n  this.__mounted = true;\n\n  const props = {\n    ...this.__properties,\n    parent: this,\n    children: this.__children,\n  };\n\n  render(h(component, props), this);\n}\n\n/* -----------------------------------\n *\n * Export\n *\n * -------------------------------- */\n\nexport { define };\n"],"names":["ErrorTypes","isPromise","input","then","selfClosingTags","parseJson","value","tagName","this","formatProps","__options","result","JSON","parse","console","error","Json","toLowerCase","attributes","length","i","item","name","getPropKey","sanitised","trim","replace","charAt","slice","toUpperCase","getElementAttributes","hasAttributes","allowed","values","getAttributeObject","key","Object","keys","indexOf","parseHtml","dom","html","nodes","DOMParser","parseFromString","body","getDocument","innerHTML","convertToVDom","call","node","nodeType","textContent","nodeName","String","childNodes","Array","from","children","map","child","slot","props","h","Fragment","includes","__slots","every","join","getSlotChildren","onConnected","getAttribute","json","querySelector","remove","__children","__mounted","hasAttribute","__properties","data","removeAttribute","response","__component","renderer","finaliseComponent","component","getComponentResult","original","updated","render","__instance","parent","wrapComponent","Missing","options","elementTag","getElementTag","preRender","customElements","define","_class","formAssociated","Reflect","construct","CustomElement","HTMLElement","element","observedAttributes","prototype","create","constructor","connectedCallback","attributeChangedCallback","onAttributeChange","disconnectedCallback","onDisconnected","setupElement","content","Promise","server","type","dangerouslySetInnerHTML","__html","stringify"],"mappings":"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"}